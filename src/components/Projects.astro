---
import IconWrapper from './IconWrapper.tsx';

const projects = [
  {
    title: "Keyword Enrichment Tool",
    description: "Advanced AI-powered keyword enrichment system using OpenAI's GPT models for content optimization and SEO enhancement.",
    technologies: ["Python", "OpenAI API", "Flask", "NLP"],
    color: "blue",
    icon: "Bot"
  },
  {
    title: "AI Editor Backend",
    description: "Custom AI-powered content editor backend with Flask and GPT-4 integration for intelligent content generation and editing.",
    technologies: ["Python", "FastAPI", "Flask", "GPT-4", "REST API"],
    color: "green",
    icon: "Zap"
  },
  {
    title: "QA Automation Framework",
    description: "Comprehensive Quality Assurance automation framework built with Kotlin for enterprise-grade testing and monitoring.",
    technologies: ["Kotlin", "JUnit", "WireMock", "Zabbix"],
    color: "purple",
    icon: "Shield"
  },
  {
    title: "RESTful ML APIs",
    description: "High-performance machine learning APIs built with FastAPI, featuring real-time model inference and data processing.",
    technologies: ["FastAPI", "ML Models", "Docker", "GCP"],
    color: "orange",
    icon: "Database"
  },
  {
    title: "IAB Category Classifier",
    description: "AI-powered website analyzer that automatically categorizes websites into IAB categories using fine-tuned ChatGPT models.",
    technologies: ["FastAPI", "ChatGPT", "Fine-tuning", "Web Scraping", "NLP"],
    color: "red",
    icon: "Globe"
  },
  {
    title: "SEO Content Analyzer",
    description: "Advanced web content analyzer that evaluates SEO methods, content organization, and provides optimization recommendations.",
    technologies: ["Python", "BeautifulSoup", "NLTK", "FastAPI", "SEO Tools"],
    color: "teal",
    icon: "Search"
  }
];

const colorMap = {
  blue: "bg-blue-500/20 text-blue-400 border-blue-500/30",
  green: "bg-green-500/20 text-green-400 border-green-500/30",
  purple: "bg-purple-500/20 text-purple-400 border-purple-500/30",
  orange: "bg-orange-500/20 text-orange-400 border-orange-500/30",
  red: "bg-red-500/20 text-red-400 border-red-500/30",
  teal: "bg-teal-500/20 text-teal-400 border-teal-500/30"
};
---

<section class="py-16 md:py-20 px-4">
  <div class="max-w-6xl mx-auto">
    <!-- Section Header -->
    <div class="text-center mb-12 md:mb-16 opacity-0 animate-fade-in">
      <h2 class="text-3xl md:text-4xl font-bold text-white mb-4">Featured Projects</h2>
      <div class="w-20 h-1 bg-blue-500 mx-auto"></div>
    </div>

    <div class="grid grid-cols-1 md:grid-cols-2 gap-6 md:gap-8">
      {projects.map((project, index) => (
          <div 
            class={`bg-slate-900/50 backdrop-blur-sm rounded-lg p-4 md:p-6 border border-slate-700 hover:border-slate-600 hover:shadow-lg hover:shadow-blue-500/20 transition-all duration-300 group opacity-0 animate-fade-in-delay-${(index + 1) * 100}`}
          >
            <div class="flex items-center mb-4">
              <div class={`inline-flex items-center justify-center p-2 md:p-3 rounded-lg mr-3 md:mr-4 ${colorMap[project.color]}`}>
                <IconWrapper name={project.icon} className="w-6 h-6" client:load />
              </div>
              <h3 class="text-lg md:text-xl font-bold text-white">{project.title}</h3>
            </div>

            <p class="text-slate-300 mb-4 md:mb-6 leading-relaxed text-sm md:text-base">
              {project.description}
            </p>

            <div class="flex flex-wrap gap-2 mb-4 md:mb-6">
              {project.technologies.map((tech) => (
                <span class="bg-slate-700/50 text-slate-300 px-2 md:px-3 py-1 rounded-full text-xs md:text-sm border border-slate-600">
                  {tech}
                </span>
              ))}
            </div>
          </div>
        ))}
    </div>
  </div>
</section>

<style>
  @keyframes fade-in {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .animate-fade-in {
    animation: fade-in 0.8s ease-out forwards;
  }

  .animate-fade-in-delay-100 {
    animation: fade-in 0.8s ease-out 0.3s forwards;
  }

  .animate-fade-in-delay-200 {
    animation: fade-in 0.8s ease-out 0.4s forwards;
  }

  .animate-fade-in-delay-300 {
    animation: fade-in 0.8s ease-out 0.5s forwards;
  }

  .animate-fade-in-delay-400 {
    animation: fade-in 0.8s ease-out 0.6s forwards;
  }

  .animate-fade-in-delay-500 {
    animation: fade-in 0.8s ease-out 0.7s forwards;
  }

  .animate-fade-in-delay-600 {
    animation: fade-in 0.8s ease-out 0.8s forwards;
  }

  /* Add intersection observer for better performance */
  @media (prefers-reduced-motion: no-preference) {
    .animate-fade-in,
    .animate-fade-in-delay-100,
    .animate-fade-in-delay-200,
    .animate-fade-in-delay-300,
    .animate-fade-in-delay-400,
    .animate-fade-in-delay-500,
    .animate-fade-in-delay-600 {
      opacity: 0;
    }
  }
</style>